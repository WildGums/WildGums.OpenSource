<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Module Catalogs on WildGums open source center</title><link>https://opensource.wildgums.com/orc.prism/module-catalogs/</link><description>Recent content in Module Catalogs on WildGums open source center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://opensource.wildgums.com/orc.prism/module-catalogs/index.xml" rel="self" type="application/rss+xml"/><item><title>CompositeModuleCatalog</title><link>https://opensource.wildgums.com/orc.prism/module-catalogs/compositemodulecatalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://opensource.wildgums.com/orc.prism/module-catalogs/compositemodulecatalog/</guid><description>Initializing the catalog Below is an example of the catalog in action:
protected override void ConfigureModuleCatalog() { base.ConfigureModuleCatalog(); ModuleCatalog.Add(new DirectoryModuleCatalog { ModulePath = @&amp;quot;.\Modules&amp;quot; }); ModuleCatalog.Add(new NuGetBasedModuleCatalog { PackageSource = @&amp;quot;C:\SomeDir\localNugetSource&amp;quot;, AllowPrereleaseVersions = true, IgnoreDependencies = false }); ModuleCatalog.Initialize(); } Customizing the catalog No customization options documented yet - feel free to contribute</description></item><item><title>DownloadingModuleCatalog</title><link>https://opensource.wildgums.com/orc.prism/module-catalogs/downloadingmodulecatalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://opensource.wildgums.com/orc.prism/module-catalogs/downloadingmodulecatalog/</guid><description>The DownloadingModuleCatalog allow the downloading of all modules dynamically based on the module info.
Initializing the catalog protected override void ConfigureModuleCatalog() { base.ConfigureModuleCatalog(); } Customizing the catalog No customization options documented yet - feel free to contribute</description></item><item><title>NuGetBasedModuleCatalog</title><link>https://opensource.wildgums.com/orc.prism/module-catalogs/nugetbasedmodulecatalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://opensource.wildgums.com/orc.prism/module-catalogs/nugetbasedmodulecatalog/</guid><description>The NuGetBasedModuleCatalog allows a user to use a NuGet package source as a module source. Note that the CompositeNuGetBasedModuleCatalog works the same but can combine multiple NuGet sources
Initializing the catalog The catalog has several options. Below is an example of a default customization:
protected override void ConfigureModuleCatalog() { base.ConfigureModuleCatalog(); ModuleCatalog.IgnoreDependencies = false; ModuleCatalog.AllowPrereleaseVersions = true; ModuleCatalog.PackageSource = @&amp;quot;https://www.nuget.org/api/v2/&amp;quot;, } Initializing the composite catalog The composite catalog can be initialized using the code below:</description></item><item><title>SafeDirectoryModuleCatalog</title><link>https://opensource.wildgums.com/orc.prism/module-catalogs/safedirectorymodulecatalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://opensource.wildgums.com/orc.prism/module-catalogs/safedirectorymodulecatalog/</guid><description>The SafeDirectoryModuleCatalog is a safe implementation of the DirectoryModuleCatalog that ships with prism.
Initializing the catalog protected override void ConfigureModuleCatalog() { base.ConfigureModuleCatalog(); ModulePath = @&amp;quot;.\Modules&amp;quot; } Customizing the catalog No customization options documented yet - feel free to contribute</description></item></channel></rss>